// Generated by CoffeeScript 1.4.0
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  jQuery(function() {
    var CustomerControllerView, CustomerCreateBodyView, CustomerCreateView, _ref;
    CustomerControllerView = (function(_super) {

      __extends(CustomerControllerView, _super);

      function CustomerControllerView() {
        return CustomerControllerView.__super__.constructor.apply(this, arguments);
      }

      CustomerControllerView.prototype.el = '#people-main-content';

      CustomerControllerView.prototype.events = {
        'click #customer-menu-pill': 'renderCustomersListView',
        'click #customers-list-tab': 'renderCustomersListView',
        'click #customer-item-tab': 'renderCustomerDefaultItemView',
        'click #customer-create-tab': 'renderCustomerCreateView'
      };

      CustomerControllerView.prototype.initialize = function() {
        return this.currentView = null;
      };

      CustomerControllerView.prototype.renderCustomersListView = function() {
        if (this.currentView) {
          this.currentView.$el.html("");
        }
        this.currentView = new app.GenericListView({
          collection: app.Customers,
          el: "#customers-list-view-content",
          tableTemplate: '#customers-table-template',
          tableListID: '#customers-table-list',
          itemTrTemplate: '#customer-tr-template',
          itemControllerView: this
        });
        return this.currentView.render();
      };

      CustomerControllerView.prototype.renderCustomerDefaultItemView = function() {
        if (this.currentView) {
          this.currentView.$el.html("");
        }
        this.currentView = new app.GenericSingleView({
          collection: app.Customers,
          el: "#customer-item-view-content",
          singleLayoutTemplate: "#single-item-view-template",
          singleContentTemplate: "#customer-view-content-template"
        });
        return this.currentView.render(app.Customers.models[0]);
      };

      CustomerControllerView.prototype.renderSpecificItemView = function(model) {
        if (this.currentView) {
          this.currentView.$el.html("");
        }
        $('#customer-item-tab a').tab('show');
        this.currentView = new app.GenericSingleView({
          collection: app.Customers,
          el: "#customer-item-view-content",
          singleLayoutTemplate: "#single-item-view-template",
          singleContentTemplate: "#customer-view-content-template"
        });
        return this.currentView.render(model);
      };

      CustomerControllerView.prototype.renderCustomerCreateView = function() {
        if (this.currentView) {
          this.currentView.$el.html("");
        }
        this.currentView = new CustomerCreateView({
          el: "#customer-create-view-content",
          createFormTemplate: "#customer-create-template",
          formRules: {
            firstName: {
              required: true
            },
            lastName: {
              required: true
            },
            email: {
              required: true,
              email: true
            }
          }
        });
        return this.currentView.render();
      };

      return CustomerControllerView;

    })(Backbone.View);
    CustomerCreateView = (function(_super) {

      __extends(CustomerCreateView, _super);

      function CustomerCreateView() {
        return CustomerCreateView.__super__.constructor.apply(this, arguments);
      }

      CustomerCreateView.prototype.initialize = function() {
        this.el = this.options.el;
        return this.itemCreateBodyView = new CustomerCreateBodyView({
          template: this.options.createFormTemplate,
          formRules: this.options.formRules
        });
      };

      return CustomerCreateView;

    })(app.GenericCreateView);
    CustomerCreateBodyView = (function(_super) {

      __extends(CustomerCreateBodyView, _super);

      function CustomerCreateBodyView() {
        return CustomerCreateBodyView.__super__.constructor.apply(this, arguments);
      }

      CustomerCreateBodyView.prototype.isUniqueItem = function() {
        var alertWarning, isUniqueItem, message;
        isUniqueItem = app.Customers.where({
          email: $('#email-input')
        }).length > 0;
        if (!isUniqueItem) {
          message = "You already have a customer by this email. " + (alertWarning = new app.AlertView);
          $("#main-alert-div").html(alertWarning.render("alert-error", message).el);
          console.log("didn't pass existing customer check");
          return false;
        }
        return true;
      };

      CustomerCreateBodyView.prototype.createNewItem = function(subQuants) {
        var customerModel;
        customerModel = {
          firstName: $("#first-name-input").val() || null,
          lastName: $("#last-name-input").val() || null,
          email: $("#email-input").val() || null,
          address: $("#address-input").val() || null,
          city: $("#city-input").val() || null,
          country: $("#country-input").val() || null,
          state: $("#state-input").val() || null,
          zip: $("#zip-input").val() || null,
          phone: $("#phone-input").val() || null,
          dob: $("#dob-input").val() || null,
          sex: $('input[name=sexRadio]:checked').val() || null
        };
        return console.log(customerModel);
      };

      return CustomerCreateBodyView;

    })(app.ItemCreateBodyView);
    this.app = (_ref = window.app) != null ? _ref : {};
    return this.app.CustomerControllerView = CustomerControllerView;
  });

}).call(this);
